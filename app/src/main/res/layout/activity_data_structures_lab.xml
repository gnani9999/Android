<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/bg2"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".Data_structures_lab" >

    <ScrollView
        android:id="@+id/scrollView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentTop="true" >

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical" >

            <TextView
                android:id="@+id/textView1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="#ffffff"
                android:text="Objectives:
                  To write and execute programs in C to solve problems using data structures such as arrays, linked lists, stacks, queues, trees, graphs, hash tables and search trees. 
                  To write and execute write programs in C to implement various sorting and searching methods.
                 
                  Recommended Systems/Software Requirements:
                    Intel based desktop PC with minimum of 166 MHZ or faster processor with at least 64 MB RAM and 100 MB free disk space. 
                    C compiler. 
                   
                   Week1: Write a C program that uses functions to perform the following: 
                   a) Create a singly linked list of integers. 
                   b) Delete a given integer from the above linked list. 
                   c) Display the contents of the above list after deletion. 
                   
                   Week2: Write a C program that uses functions to perform the following: 
                   a) Create a doubly linked list of integers. 
                   b) Delete a given integer from the above doubly linked list. 
                   c) Display the contents of the above list after deletion. 
                   
                   Week3: Write a C program that uses stack operations to convert a given infix expression into its postfix Equivalent, Implement the stack using an array. 
                   
                   Week 4:Write C programs to implement a double ended queue ADT using i)array and ii)doubly linked list respectively. 
                   
                   Week 5:Write a C program that uses functions to perform the following: a) Create a binary search tree of characters. b) Traverse the above Binary search tree recursively in Postorder. 
                   
                   Week 6:Write a C program that uses functions to perform the following: a) Create a binary search tree of integers. b) Traverse the above Binary search tree non recursively in inorder."
                android:textAppearance="?android:attr/textAppearanceSmall" />

            <TextView
                android:id="@+id/textView1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="#ffffff"
                android:text="Week 7: 
                Write C programs for implementing the following sorting methods to arrange a list of integers in Ascending order : 
                a) Insertion sort        
                b) Merge sort 
                
                Week 8:Write C programs for implementing the following sorting methods to arrange a list of integers in ascending order: 
                a) Quick sort            
                b) Selection sort 
                
                Week 9:
                i) Write a C program to perform the following operation: a)Insertion into a B-tree. 
                ii) Write a C program for implementing Heap sort algorithm for sorting a given list of integers in ascending order. 
                
                Week 10: Write a C program to implement all the functions of a dictionary (ADT) using hashing. 
                
                Week 11: Write a C program for implementing Knuth-Morris- Pratt pattern matching algorithm. 
                
                Week 12: Write C programs for implementing the following graph traversal algorithms: a)Depth first traversal       b)Breadth first traversal

TEXT BOOKS:
 1. C and Data Structures, Third Edition, P.Padmanabham, BS Publications. 
 2. C and Data Structures, Prof. P.S.Deshpande and Prof. O.G. Kakde, Dreamtech Press. 
 3. Data structures using C, A.K.Sharma, 2nd edition, Pearson. 
 4. Data Structures using C, R.Thareja, Oxford University Press. 
 5. C and Data Structures, N.B.Venkateswarlu and E.V.Prasad,S.Chand. 
 6. C Programming and Data Structures, P.Radha Krishna, Hi-Tech Publishers. 
 
 Outcomes: 
  Ability to identify the appropriate data structure for given problem. 
  Graduate able to design and analyze the time and space complexity of algorithm or program. 
  Ability to effectively use compilers includes library functions, debuggers and trouble shooting.
                "
                android:textAppearance="?android:attr/textAppearanceSmall" />
        </LinearLayout>
    </ScrollView>

</RelativeLayout>
